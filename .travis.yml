language: python

python:
  - "2.7"

sudo: false
#sudo: true

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/hdf5-1.8.17
    - $HOME/nfft-3.2.3
    - $HOME/libspimage
    - $HOME/spsim
    - $HOME/local

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - kubuntu-backports
      - couchbase-precise
    packages:
      - libpng-dev
      - libtiff4-dev
      - libfftw3-dev
      - cmake
      - gsl-bin
      - libgsl0-dev

before_install:
  - ls $HOME/mhantke/build/condor
  - echo $HOME
  - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/local/lib
# Install NFFT
  - cd $HOME
  - ls $HOME/nfft-3.2.3
  - if [ ! -d "$HOME/nfft-3.2.3/src" ]; then wget https://www-user.tu-chemnitz.de/~potts/nfft/download/nfft-3.2.3.tar.gz && tar xvzf nfft-3.2.3.tar.gz; cd nfft-3.2.3 && ./configure --prefix=${HOME}/local && make && make install; else echo 'Using NFFT from cached directory'; fi
# Install hdf5
  - cd $HOME
  - ls $HOME/hdf5-1.8.17
  - if [ ! -d "hdf5-1.8.17/src" ]; then wget http://www.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.8.17.tar.gz && tar xvzf hdf5-1.8.17.tar.gz; cd hdf5-1.8.17 && ./configure --prefix=${HOME}/local && make && make install; else echo 'Using hdf5 from cached directory'; fi
# Install libspimage
  - cd $HOME
  - ls $HOME/libspimage
  - if [ ! -d "$HOME/libspimage/.git" ]; then git clone https://github.com/FilipeMaia/libspimage; else echo 'Using libspimage from cached directory'; fi
  - mkdir -p libspimage/build && cd libspimage/build
  - git pull
  - cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_CUDA=OFF -DPYTHON_WRAPPERS=ON -DHDF5_INCLUDE_DIR=$HOME/local/include -DHDF5_LIBRARY=$HOME/local/lib/libhdf5.so -DCMAKE_INSTALL_PREFIX=${HOME}/local ..
  - make -j 2
  - make install
# Install spsim
  - cd $HOME
  - ls $HOME/spsim
  - if [ ! -d "$HOME/spsim/.git" ]; then git clone https://github.com/FilipeMaia/spsim; else echo 'Using spsim from cached directory'; fi
  - mkdir -p spsim/build && cd spsim/build
  - git pull
  - cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_CUDA=OFF -DUSE_NFFT=OFF -DPYTHON_WRAPPERS=ON -DHDF5_INCLUDE_DIR=$HOME/local/include -DHDF5_LIBRARY=$HOME/local/lib/libhdf5.so -DCMAKE_INSTALL_PREFIX=${HOME}/local ..
  - make -j 2
  - make install
# szip???
# command to install dependencies
install:
  - pip install -r $HOME/mhantke/build/condor/requirements.txt
  - cd $HOME/mhantke/build/condor
  - python setup.py install
# command to run tests
script: python -m unittest -v condor.tests.test_all
