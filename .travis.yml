language: python

python:
  - "2.7"

sudo: false

virtualenv:
  system_site_packages: true

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared
    - $HOME/nfft-3.2.3
    - $HOME/libspimage
    #- $HOME/spsim
    - $HOME/local

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - kubuntu-backports
      - couchbase-precise
    packages:
      - libpng-dev
      - libtiff4-dev
      - libfftw3-dev
      - cmake
      - gsl-bin
      - libgsl0-dev
      - swig
      - gcc-4.9
# Python stuff (for discovering these packages set in virtualenv: system_site_packages: true)
      - python-scipy
      - python-numpy
      - python-h5py

before_install:
  - echo $HOME
  - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/local/lib:${HOME}/local/lib64
# Install NFFT
  - cd $HOME
  - if [ ! -d "$HOME/nfft-3.2.3/include" ]; then wget https://www-user.tu-chemnitz.de/~potts/nfft/download/nfft-3.2.3.tar.gz && tar xvzf nfft-3.2.3.tar.gz; cd nfft-3.2.3 && ./configure --prefix=${HOME}/local && make && make install; else echo 'Using NFFT from cached directory'; fi
# Install hdf5
  - cd $HOME
  - if [ ! -d "$HOME/hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared/include" ]; then wget http://www.hdfgroup.org/ftp/HDF5/current/bin/linux-centos7-x86_64-gcc485/hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared.tar.gz && tar xvzf hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared.tar.gz; else echo 'Using hdf5 from cached directory'; fi
  - export LD_LIBRARY_PATH=${HOME}/hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared/lib:${LD_LIBRARY_PATH}
# Install libspimage
  - cd $HOME
  - ls $HOME/libspimage
  - if [ ! -d "$HOME/libspimage/.git" ]; then git clone https://github.com/FilipeMaia/libspimage; else echo 'Using libspimage from cached directory'; fi
  - mkdir -p libspimage/build && cd libspimage/build
  - git pull
  - cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_CUDA=OFF -DPYTHON_WRAPPERS=ON -DHDF5_INCLUDE_DIR=$HOME/hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared/include -DHDF5_LIBRARY=$HOME/hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared/lib/libhdf5.so -DCMAKE_INSTALL_PREFIX=${HOME}/local ..
  - make -j 2
  - make install
# Install spsim
  - cd $HOME
  #- ls $HOME/spsim
  #- if [ ! -d "$HOME/spsim/.git" ]; then git clone https://github.com/FilipeMaia/spsim; else echo 'Using spsim from cached directory'; fi
  - git clone https://github.com/FilipeMaia/spsim
  - mkdir -p spsim/build && cd spsim/build
  - git pull
  #- cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_LIBRARY=ON -DUSE_CUDA=OFF -DUSE_NFFT=OFF -DPYTHON_WRAPPERS=ON -DHDF5_INCLUDE_DIR=$HOME/hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared/include -DHDF5_LIBRARY=$HOME/hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared/lib/libhdf5.so -DCMAKE_INSTALL_PREFIX=${HOME}/local ..
  - cmake -DBUILD_LIBRARY=ON -DUSE_CUDA=OFF -DUSE_NFFT=OFF -DPYTHON_WRAPPERS=ON -DHDF5_INCLUDE_DIR=$HOME/hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared/include -DHDF5_LIBRARY=$HOME/hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared/lib/libhdf5.so -DCMAKE_INSTALL_PREFIX=${HOME}/local ..
  - cat CMakeCache.txt
  - make -j 2
  - make install
  - ls -alh $HOME/local/lib
  - ls -alh /home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages
  - ls -alh /home/travis/virtualenv/python2.7_with_system_site_packages/lib/python2.7/site-packages
# Command to install dependencies
install:
# Install h5py (we want an h5py that is built with the new hdf5 version, that is why)
#  - export HDF5_DIR=${HOME}/hdf5-1.8.17-linux-centos7-x86_64-gcc485-shared/
#  - pip install h5py
# Install condor
  - cd $HOME/build/mhantke/condor
  - python setup.py install --nfft-include-dir=$HOME/local/include --nfft-library-dir=$HOME/local/lib
# command to run tests
script:
  - export PYTHONPATH=/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages:/home/travis/virtualenv/python2.7_with_system_site_packages/lib/python2.7/site-packages
  - echo $PYTHONPATH
  - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/local/lib:${HOME}/local/lib64:/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages:/home/travis/virtualenv/python2.7_with_system_site_packages/lib/python2.7/site-packages
  - echo $LD_LIBRARY_PATH
  - python -m unittest -v condor.tests.test_all
  - cd $HOME/build/mhantke/condor/; python examples.py