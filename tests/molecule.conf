# ----------------------------------------------------------------------------------------------------- 
# CONDOR
# Simulator for diffractive single-particle imaging experiments with X-ray lasers
# http://xfel.icm.uu.se/condor/
# ----------------------------------------------------------------------------------------------------- 
# Copyright 2014 Max Hantke, Filipe R.N.C. Maia, Tomas Ekeberg
# Condor is distributed under the terms of the GNU General Public License
# ----------------------------------------------------------------------------------------------------- 
# General note:
#  All variables are in SI units by default. Exceptions explicit by variable name.
# ----------------------------------------------------------------------------------------------------- 

[source]

# Wavelength [m]
wavelength = 0.1E-9

# Focal spot size [m]
focus_diameter = 100.E-09

# Pulse energy [J]
pulse_energy = 1

# Pulse energy variation and spread [J]
pulse_energy_variation = None
#pulse_energy_variation = range
#pulse_energy_variation_n = 10
#pulse_energy_spread = 1E-4

# Pulse profile either None, top_hat, gaussian, pseudo_lorentzian
#profile_model = pseudo_lorentzian
#profile_model = gaussian
profile_model = top_hat

[sample]

number_of_images = 1
number_of_particles = 1.
number_of_particles_variation = None

[particle] 

position = [0.,0.,0.]
position_variation = None
#position_spread = [500E-9,500E-9,500E-9]

concentration = 1.0

# Particle species can be set to  uniform_sphere, uniform_spheoid or map3d
particle_species = molecule

# Material type can be set to 'none', 'protein','virus','cell','latexball','water' or 'custom'
#material_type = cell

# If "material_type = 'custom'" 
# - the relative atomic composition ("c[element symbol] = [fraction]")
# and
# - the mass density ("massdensity = [massdensity in kg/mÂ³]")
# have to be specified.
#cAu = 1
#massdensity = 19300

# Sample size [m]
# - if sample_type=uniform_sphere,icosahedron: diameter
# - if sample_type=uniform_spheroid: diameter_a,diameter_c
# - if sample_type=map3d: edge length of density map
#diameter = 100.0E-09

# Diameter spread [m]
#diameter_spread = 50E-09
#diameter_variation = None

#pdb_filename = ./DNA.pdb
pdb_filename = ./1I3Q.pdb

# Sample geometry can be set to icosahedron, spheroid or custom
#geometry = [spheroid]
#geometry = [icosahedron,spheroid,cube]
#geometry_concentrations = [0.6,0.2,0.2]
# If geometry=icosahedron or geomentry=spheroid you can specify the euler angles of the object to be simulated
#geometry_euler_angle_0 = 0.
#geometry_euler_angle_1 = 0.
#geometry_euler_angle_2 = 0.
# If geometry=custom you need to specify the location of the H5-file with the density map (dataset must be called "data")
#filename = /home/hantke/programs/propagator/scripts/filipe_octahedra/octa200.h5

#flattening = 0.8
#flattening_variation = uniform
#flattening_spread = 0.4

# Alignment mode (first_axis means euler_angle_0 = 0, euler_angle_1 = 0, euler_angle_2 = 0)
alignment = random
#alignment = first_axis
#alignment = euler_angles

# Orientation of map3d (only of importance if sample_type='map3d')
# Euler angles
euler_angle_0 = None
euler_angle_1 = None
euler_angle_2 = None

[detector]

# sample-detector distance [m]
distance = 0.05

# pixel width and height [m]
#pixel_size = 75E-06
pixel_size = 300E-06

# absolute number of pixels in x/y direction
#Nx = 1024
#Ny = 1024
Nx = 256
Ny = 256

# Central gap between detector halves in pixel
#x_gap_size_in_pixel = 23
x_gap_size_in_pixel = 0
y_gap_size_in_pixel = 0

# Central hole in detector
hole_diameter_in_pixel = 0
#hole_diameter_in_pixel = 70

# Center position in pixel (pixel (0,0) has its center at x=0.0 y=0.0)
# Make sure that border pixel is not existing twice! Center should be lying on a pixel
cx = middle
cy = middle

center_variation = uniform
center_spread_x = 10
center_spread_y = 10
center_spread_limit = 10

# noise statistics
#noise = none
noise = poisson
#noise = normal
#noise = normal_poisson

# Noise spread (argument is necessary if noise is normal or normal_poisson)
noise_spread = 1

# saturation level [ph/pixel]
saturation_level = none